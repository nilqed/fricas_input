
collatz(n:PositiveInteger):PositiveInteger ==
  output(n)
  n=1 => 1
  even? n => collatz(n/2)
  odd? n => collatz(3*n+1)
  return 1
  
collatzb(n:PositiveInteger):PositiveInteger ==
  output(binary n)
  n=1 => 1
  even? n => collatzb(n/2)
  odd? n => collatzb(3*n+1)
  return 1
  
collatzf(n:PositiveInteger):PositiveInteger ==
  if even? n then 
    return (n/2) 
  else 
    return (3*n+1) 

-- g(n) == 1 if n even else 0
-- c(n) == n/2 * g(n) + (1-g(n))*(3*n+1)
--      == g(n)[n/2-3*n-1]+(3*n-1)

g(n:Integer):Integer == if even? n then return 1 else return 0
c(n:Integer):Integer == 3*n+1-g(n)*(2+5*n)/2

-- n/2 * g(n) + (1-g(n))*(3*n+1) = m/2 * g(m) + (1-g(m))*(3*m+1)
-- n even, m even => n=m
-- n even, m odd  => n/2=3*m+1 => n=6*m+2
-- n odd, m even => m=6*n+1
-- n odd, m odd => n=m.

-- Since g(n)*g(n+1)=0 => [â€‹6*n+8-2*f(n+1]*[6*n+2-2*f(n)]=0
-- and g(n)+g(n+1)=1
-- ==> f(n+1)=(35*n^2+16+59*n-(10*n+14)*f(n))/(10*n+4)
-- f(n) = c(n) of course

f(1) == 4
f(n) == (35*(n-1)^2+16+59*(n-1)-(10*(n-1)+14)*f(n-1))/(10*(n-1)+4)

--
-- F(n)=f^(3)(n) 
-- n=2m or 2m+1,m=2k or 2k+1,k=2l or 2l+1 
-- total 8 FÃ¤lle:
-- 1. 2m,2k,2l => n=8l => F=l
-- 2. 2m,2k,2l+1 => n=8l+4 => 3(2l+1)+1=6l+4
-- 3. 2m,2k+1,2l => n=8l+2 => [3(4l+1)+1]/2=6l+2
-- 4. 2m,2k+1,2l+1 => n=8l+6 => [3(4l+3)+1]/2=6l+5
-- 5. 2m+1,2k,2l => n=8l+1 => [3(8l+1)+1]/2/2=6l+1
-- 6. 2m+1,2k,2l+1 => n=8l+5 => [3(8l+5)+1]/2/2=6l+4
-- 7. 2m+1,2k+1,2l => n=8l+3 => [3(12l+5)+1]=36l+16
-- 8. 2m+1,2k+1,2l+1 => n=8l+7 => [3(12l+11)+1]=36l+34 

F3(n) == c(c(c(n)))

F(n) == 
  q:=n quo 8
  r:=n rem 8
  r = 0 => q
  r = 1 => 6*q+1
  r = 2 => 6*q+2
  r = 3 => 36*q+16
  r = 4 => 6*q+4
  r = 5 => 6*q+4
  r = 6 => 6*q+5
  r = 7 => 36*q+34
  return 0