)abbrev package JBG JetBundleGeometry
++ Author: Kurt Pagani
++ Date Created: Sun Jan 01 23:25:52 CET 2017
++ License: FriCAS/BSD
++ Required: JetBundleXYZ (all), FriCAS 1.3 or later
++   DeRhamComplex, DifferentialForms, SurfaceComplex
++   CellMap
++ References: 
++ Description:
++
JetBundleGeometry(xs,us) : Exports == Implementation where

  X   ==> Expression Integer
  LS  ==> List Symbol
  PI  ==> PositiveInteger 
  NNI ==> NonNegativeInteger
  VAR ==> Union(List Symbol, SegmentBinding NNI)

  xs: VAR
  us: VAR
 
 
  Exports ==  with
    
    ivars : () -> List X
    dvars : () -> List X
    
    indVars : () -> List JetBundle(xs,us)
    --coerce : % -> OutputForm
	
	
  Implementation ==  add 


    buildSymbols(vs:VAR):List Symbol ==
      vs case List Symbol => vs
      vs case SegmentBinding NNI => 
        v:Symbol:=variable vs
        r:Segment(NNI):=segment vs
        [subscript(v,[j::OutputForm]) for j in lo(r)..hi(r)]
        
    
    buildVars(vs:VAR):List X ==
      vs case List Symbol => [coerce(s)$X for s in vs]
      vs case SegmentBinding NNI => 
        v:Symbol:=variable vs
        r:Segment(NNI):=segment vs
        [coerce(subscript(v,[j::OutputForm]))$X for j in lo(r)..hi(r)]
        
        
    ivars() == buildVars(xs)
    dvars() == buildVars(us)
    
    xs:List Symbol := buildSymbols(xs)
    us:List Symbol := buildSymbols(us)
    JB ==> JetBundle(xs,us)

    indVars() == [U(k::PI)$JB for k in 1..#us]


)if false

JBG1 ==> JetBundleGeometry(x=0..6,q=1..2)
ivars()$JBG1
dvars()$JBG1


JetBundleGeometry
(10) -> U(1)$JB1 = (X(1)$JBX1)^2

              2
   (10)  u = x
                Type: Equation(JetBundleExpression(JetBundle([x,y,z],[u,v])))
(11) -> U(1)$JB1 := (X(1)$JBX1)^2
   Internal Error
   The attributed tree form|JetBundle|is not a vector.

(11) -> U(1)$JB1 = (X(1)$JBX1)^2

              2
   (11)  u = x
                Type: Equation(JetBundleExpression(JetBundle([x,y,z],[u,v])))
(12) -> U(1)$JB1

   (12)  u
                                               Type: JetBundle([x,y,z],[u,v])
)endif