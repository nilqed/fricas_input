)co fpg
)abbrev package FGG FiniteGroupGen
++ Author: Kurt Pagani
++ Date Created: Mon Nov 07 02:35:57 CET 2016
++ License: BSD
++ References:
++ Description:
++
FiniteGroupGen(L:List Symbol) : Exports == Implementation where
  
  LS      ==> List Symbol
  OVAR    ==> OrderedVariableList 
  FG(S)   ==> FreeGroup OVAR S
  LEQ(G)  ==> List Equation G
  REC     ==> Record(gen:List FG(L), rel:LEQ FG(L)) 
       
  Exports == with 
    
    1 : () -> FG(L)
    freeGroup : () -> Type
    generators : () -> List FG(L)
    fpGroupRec : LEQ FG(L) -> REC
    fpGroup : LEQ FG(L) -> Type
	
	
  Implementation == add 
    
    1 == 1$FG(L)
    
    freeGroup() == FG(removeDuplicates L)
    
    generators():List FG(L) == [coerce(g) for g in enumerate()$OVAR(L)]
    
    fpGroupRec(x) == construct(generators(),x)$REC
    
    fpGroup(r) == FinitelyPresentedGroup(L,r) 
   
   
-- X==>FGG [r,s,t]
-- freeGroup()$X
-- g:=generators()$X
-- fpGroup [g.1=g.2,g.2*g.3=1$X]
--