-- Examples of OutputForm, useful for testing output formatters

of1 := ('f)::OutputForm
of2 := ('z)::OutputForm
of3:=('+)::OutputForm
x
x + y
(x+y)^2
x + y * z
factor(-x^2-1)
integrate(x^x,x)
(5 + sqrt 63 + sqrt 847)^(1/3)
set [1,2,3]
multiset [x rem 5 for x in primes(2,1000)]
matrix [ [x^i + y^j for i in 1..3] for j in 1..3]
series(sin(a*x),x=0)
xs := series 'x
sin(1+xs)
series(1/log(y),y=1)
continuedFraction(314159/100000)
continuedFraction(14159/100000)
continuedFraction(3,repeating [1], repeating [3,6])
yo := operator 'y;
D(yo z, z)
D(yo z, z, 2) + D(yo z, z) + yo z = 0
D(yo(x,z), [x,x,z,x])
prefix(of1, [of2 for i in 1..5])
infix(of3,[of2 for i in 1..4])
infix(of3, of1, of2)
postfix(of3, of1)
(matrix$OutputForm)([[of1, of2], [of2, of1]])
root(of1)
root(of1, of2)
over(of1, of2)
brace(of1)
brace([of1 for i in 1..4])
bracket(of1)
bracket([of1 for i in 1..4])
paren(of1)
paren([of1 for i in 1..4])
SEGMENT(of1,of2)
SEGMENT(of1)
tensor(of1,of2)
rarrow(of1, of2)
of1 = of2
-- We need qualification to avoid blind transformation in the parser
-- even with qualification does not work
-- (_~_=$OutputForm)(of1, of2)
infix('_~_=, of1, of2)
of1 < of2
(_>$OutputForm)(of1, of2)
(_<_=$OutputForm)(of1, of2)
(_>_=$OutputForm)(of1, of2)
of1 + of2
- of1
of1 - of1

of1 * of2
of1 / of2
(_and$OutputForm)(of1, of2)
(_or$OutputForm)(of1, of2)
(not$OutputForm)(of1)
overbar(of1)
binomial(of1, of2)
binomial(exp(x^2/2)/5, n)
binomial(binomial(exp(x^2/2)/5, n), m)
binomial(binomial(exp(x^2/2)/5, n), binomial(exp(x^2/2)/5, k))
slash(of1, of2)
integrate(x^x, x)
integral(x^x, x)
int(of1)
int(of1, of2)
int(of1, of2, of3)
sum(of1)
sum(of1, of2)
sum(of1,of2,of3)
prod(of1)
prod(of1, of2)
prod(of1,of2,of3)
sum((exp(i)+1)^j, i=1..n)^k
summation(operator(f)(i),i=1..n)+1
summation(operator(f)(i)+1,i=1..n)
sum(operator(f)(i)+1,i=1..n)^3
r := first guess([reduce(+, [factorial i for i in 1..n]) for n in 1..6])
box(prefix(of1, [of2 for i in 1..5]))
label(prefix(of1, [of2 for i in 1..5]), of2)
zag(zag(of1, of2),zag(of1, of2))
assign(of1, of2)
differentiate(of1, 15)
sub(of1, of2)
super(of1, of2)
presub(of1, of2)
presuper(of1, of2)
scripts(of1, [of2, of3, of2, of3])
scripts(of1, [of2, empty()$OutputForm, of3, empty()$OutputForm])
quote(of1)
dot(of1)
dot(of1,3)
dot(of1,4)
prime(of1)
prime(of1, 5)
overlabel(of2, of1)
semicolonSeparate([of1 for i in 1..4])
commaSeparate([of1 for i in 1..4])
blankSeparate([of1 for i in 1..4])
exquo(of1, of2)
